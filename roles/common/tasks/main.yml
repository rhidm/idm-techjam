---
#Enable SELinux if disabled or permissive
- name: Checking SELinux
  command: getenforce
  register: selinux

- name: Enabling SELinux
  command: setenforce 1
  when: "selinux != 'Enforcing'"

# Register system
- name: Register System with RHN Subscription Manager
  redhat_subscription: state=present username={{ rhn_user }} password={{ rhn_pass }} autosubscribe=true
  when: ansible_distribution == 'RedHat'

- name: Attach pools
  command: subscription-manager attach --pool={{ pool }}
  when: ansible_distribution == 'RedHat'

# Enable base repos for updating
- name: Disable all channels
  command: subscription-manager repos --disable=*
  when: ansible_distribution == 'RedHat'

- name: Enable RHEL 7 channels
  command: subscription-manager repos --enable={{ item }}
  with_items: "{{ rhel_7_base_channels }}"
  when: ansible_distribution == 'RedHat' and ansible_distribution_major_version == '7'

- name: Enable RHEL 6 channels
  command: subscription-manager repos --enable={{ item }}
  with_items: "{{ rhel_6_base_channels }}"
  when: ansible_distribution == 'RedHat' and ansible_distribution_major_version == '6'

# Update system and reboot
- name: upgrade all packages
  yum: name=* state=latest

- name: Restart server
  shell: sleep 2 && /sbin/shutdown -r now "Ansible system package upgraded"
  async: 1
  poll: 0

- name: Waiting for reboot
  local_action: wait_for host={{ ansible_default_ipv4.address }} port=22 state=started delay=10 timeout=120
